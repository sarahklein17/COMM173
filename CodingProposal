
from selenium import webdriver
import pandas as pd
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
import time
url = 'https://www.youtube.com/results?search_query=andrew+tate+chicken'
driver = webdriver.Chrome()
driver.get(url)
def scroll_to_bottom(driver):
    old_position = 0
    new_position = None
    
    while (new_position != old_position):
        old_position = driver.execute_script(("return (window.pageYOffset !== undefined) ?"
                                            " window.pageYOffset : (document.documentElement ||"
                                            " document.body.parentNode || document.body);"))
        time.sleep(5)
        driver.execute_script(("var scrollingElement = (document.scrollingElement ||"
                              " document.body);scrollingElement.scrollTop = "
                              " scrollingElement.scrollHeight"))
        
        time.sleep(5)
        new_position = driver.execute_script(("return (window.pageYOffset !== undefined) ?"
                                             " window.pageYOffset : (document.documentElement ||"
                                             " document.body.parentNode || documentBody);"))
scroll_to_bottom(driver)
user_data = driver.find_elements(by=By.XPATH,value='//*[@id="video-title"]')
print(len(user_data))
671
links = []
for i in user_data:
    if (i.get_attribute('href') != None):
        links.append(i.get_attribute('href'))

print(len(links))
564
df = pd.DataFrame(columns = ['link', 'title', 'description', 'category'])
v_category = "andrew_tate"
wait = WebDriverWait(driver, 50)
for x in links:
    driver.get(x)
    v_id = x
    v_title = wait.until(EC.presence_of_element_located(
                   (By.CSS_SELECTOR,"h1.style-scope.ytd-watch-metadata yt-formatted-string"))).text

    v_description =  wait.until(EC.presence_of_element_located(
                                (By.CSS_SELECTOR,"div#snippet yt-formatted-string"))).text
    df.loc[len(df)] = [v_id, v_title, v_description, v_category]
driver.quit()
print(df)
      
df.to_csv('comm173_youtube.csv', index=False)
